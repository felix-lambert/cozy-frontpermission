{"version":3,"sources":["app/app.module.js","app/scripts/bookmarks/Bookmark.Fctr.js","app/scripts/bookmarks/Home.Ctrl.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts/app.js","sourcesContent":["angular.module('Bookmarks', [\n  'ngResource',\n  'ngRoute'\n]).config(appConfig);\n\nvar routeObject = {\n  '/': {\n    templateUrl: 'partials/home.html',\n    controller: 'HomeAngCtrl',\n    controllerAs: 'home'\n  }\n};\n\nappConfig.$inject = ['$httpProvider', '$routeProvider'];\n\nfunction appConfig($httpProvider, $routeProvider) {\n  for (var path in routeObject) {\n    $routeProvider.when(path, routeObject[path]);\n  }\n  $routeProvider.otherwise({\n    redirectTo: '/'\n  });\n}","angular.module('Bookmarks').factory('Bookmark', Bookmark);\n\nBookmark.$inject = ['$http'];\n\nfunction Bookmark($http) {\n\n  var Bookmark = function() {\n    this._id;\n    this._bookmark = {};\n    this._bookList = [];\n  };\n\n  Bookmark.prototype = {\n    constructor: Bookmark,\n    setId: setId,\n    setBookmark: setBookmark,\n    deleteBookmark: deleteBookmark,\n    addBookmark: addBookmark,\n    getBookmarks: getBookmarks\n  };\n\n  return Bookmark;\n\n  function setBookmark(bookmark) {\n    this._bookmark = bookmark;\n  }\n\n  function setId(id) {\n    this._id = id;\n  }\n  // Define your route depended to the name of your app\n  function deleteBookmark() {\n    var self = this;\n    return $http.get('/api/delete/' + self._id).then(function(response) {\n      return response;\n    });\n  }\n\n  // Define your route depended to the name of your app\n  function addBookmark() {\n    var self = this;\n    return $http.post('/api/bookmark', self._bookmark).then(function(response) {\n      self._bookmark = response.data;\n      return response;\n    });\n  }\n  \n  // Define your route depended to the name of your app\n  function getBookmarks() {\n    var self = this;\n    return $http.get('/api/bookmarks').then(function(response) {\n      self._bookList = response.data;\n      return response;\n    });\n  }\n}","angular.module('Bookmarks').controller('HomeAngCtrl', HomeAngCtrl);\n\nHomeAngCtrl.$inject = ['$scope', '$injector'];\n\nfunction HomeAngCtrl($scope, $injector) {\n\n\tvar vm        = this;\n\tvm.getContact = getContact;\n\n  \tfunction getContact() {\n  \t\tconsole.log('Get contact');\n  \t\twindow.parent.postMessage({\n  \t\t\taction: 'getToken',\n            name: \"frontpermission\"\n  \t\t}, '*');\n\n\t\tiframeWin = document.getElementById(\"frontpermission-frame\").contentWindow;\n        iframeWin.addEventListener(\"message\", function(event) {\n        \tconsole.log(event);\n        \tintent = event.data;\n            if (intent.token) {\n                location = window.location;\n                url = location.protocol + \"//\" + location.host + \"/ds-api/request/contact/all/\";\n                xhr = new XMLHttpRequest();\n                xhr.open 'POST', url, true;\n                xhr.onload = function() {\n                    console.log 'onload';\n                    console.log xhr.response;\n                }\n                xhr.onerror = function(e) {\n                    err = \"Request failed : #{e.target.status}\";\n                    console.error err;\n                }\n                xhr.setRequestHeader 'Content-Type', 'application/json';\n                token = btoa(\"frontpermission\":intent.token);\n                authorization = \"Basic \" + token;\n                xhr.setRequestHeader(\"Authorization\", authorization);\n                xhr.send();\n            } else {\n                console.log(\"Weird intent, cannot handle it\", intent);\n                window.onerror(\"Error handling intent: \" + intent, \\\n                    \"MainRouter.initialize\", null, null, \\\n                    new Error()\n                );\n            }\n        }, false);\n  \t}\n}"]}